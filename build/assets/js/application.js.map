{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/mithril/mithril.js","src/application.js","src/event.js","src/tood.js","src/tood/index.js","src/tood/item.js","src/tood/user.js","src/utils.js","src/webSocketHandler.js"],"names":[],"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","file":"application.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",";(function() {\n\"use strict\"\nfunction Vnode(tag, key, attrs0, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs0, children: children, text: text, dom: dom, domSize: undefined, state: undefined, _state: undefined, events: undefined, instance: undefined, skip: false}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node != null && typeof node !== \"object\") return Vnode(\"#\", undefined, undefined, node === false ? \"\" : node, undefined, undefined)\n\treturn node\n}\nVnode.normalizeChildren = function normalizeChildren(children) {\n\tfor (var i = 0; i < children.length; i++) {\n\t\tchildren[i] = Vnode.normalize(children[i])\n\t}\n\treturn children\n}\nvar selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g\nvar selectorCache = {}\nvar hasOwn = {}.hasOwnProperty\nfunction isEmpty(object) {\n\tfor (var key in object) if (hasOwn.call(object, key)) return false\n\treturn true\n}\nfunction compileSelector(selector) {\n\tvar match, tag = \"div\", classes = [], attrs = {}\n\twhile (match = selectorParser.exec(selector)) {\n\t\tvar type = match[1], value = match[2]\n\t\tif (type === \"\" && value !== \"\") tag = value\n\t\telse if (type === \"#\") attrs.id = value\n\t\telse if (type === \".\") classes.push(value)\n\t\telse if (match[3][0] === \"[\") {\n\t\t\tvar attrValue = match[6]\n\t\t\tif (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\")\n\t\t\tif (match[4] === \"class\") classes.push(attrValue)\n\t\t\telse attrs[match[4]] = attrValue === \"\" ? attrValue : attrValue || true\n\t\t}\n\t}\n\tif (classes.length > 0) attrs.className = classes.join(\" \")\n\treturn selectorCache[selector] = {tag: tag, attrs: attrs}\n}\nfunction execSelector(state, attrs, children) {\n\tvar hasAttrs = false, childList, text\n\tvar className = attrs.className || attrs.class\n\tif (!isEmpty(state.attrs) && !isEmpty(attrs)) {\n\t\tvar newAttrs = {}\n\t\tfor(var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key)) {\n\t\t\t\tnewAttrs[key] = attrs[key]\n\t\t\t}\n\t\t}\n\t\tattrs = newAttrs\n\t}\n\tfor (var key in state.attrs) {\n\t\tif (hasOwn.call(state.attrs, key)) {\n\t\t\tattrs[key] = state.attrs[key]\n\t\t}\n\t}\n\tif (className !== undefined) {\n\t\tif (attrs.class !== undefined) {\n\t\t\tattrs.class = undefined\n\t\t\tattrs.className = className\n\t\t}\n\t\tif (state.attrs.className != null) {\n\t\t\tattrs.className = state.attrs.className + \" \" + className\n\t\t}\n\t}\n\tfor (var key in attrs) {\n\t\tif (hasOwn.call(attrs, key) && key !== \"key\") {\n\t\t\thasAttrs = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif (Array.isArray(children) && children.length === 1 && children[0] != null && children[0].tag === \"#\") {\n\t\ttext = children[0].children\n\t} else {\n\t\tchildList = children\n\t}\n\treturn Vnode(state.tag, attrs.key, hasAttrs ? attrs : undefined, childList, text)\n}\nfunction hyperscript(selector) {\n\t// Because sloppy mode sucks\n\tvar attrs = arguments[1], start = 2, children\n\tif (selector == null || typeof selector !== \"string\" && typeof selector !== \"function\" && typeof selector.view !== \"function\") {\n\t\tthrow Error(\"The selector must be either a string or a component.\");\n\t}\n\tif (typeof selector === \"string\") {\n\t\tvar cached = selectorCache[selector] || compileSelector(selector)\n\t}\n\tif (attrs == null) {\n\t\tattrs = {}\n\t} else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n\t\tattrs = {}\n\t\tstart = 1\n\t}\n\tif (arguments.length === start + 1) {\n\t\tchildren = arguments[start]\n\t\tif (!Array.isArray(children)) children = [children]\n\t} else {\n\t\tchildren = []\n\t\twhile (start < arguments.length) children.push(arguments[start++])\n\t}\n\tvar normalized = Vnode.normalizeChildren(children)\n\tif (typeof selector === \"string\") {\n\t\treturn execSelector(cached, attrs, normalized)\n\t} else {\n\t\treturn Vnode(selector, attrs.key, attrs, normalized)\n\t}\n}\nhyperscript.trust = function(html) {\n\tif (html == null) html = \"\"\n\treturn Vnode(\"<\", undefined, undefined, html, undefined, undefined)\n}\nhyperscript.fragment = function(attrs1, children) {\n\treturn Vnode(\"[\", attrs1.key, attrs1, Vnode.normalizeChildren(children), undefined, undefined)\n}\nvar m = hyperscript\n/** @constructor */\nvar PromisePolyfill = function(executor) {\n\tif (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with `new`\")\n\tif (typeof executor !== \"function\") throw new TypeError(\"executor must be a function\")\n\tvar self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\n\tvar instance = self._instance = {resolvers: resolvers, rejectors: rejectors}\n\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\tfunction handler(list, shouldAbsorb) {\n\t\treturn function execute(value) {\n\t\t\tvar then\n\t\t\ttry {\n\t\t\t\tif (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\n\t\t\t\t\tif (value === self) throw new TypeError(\"Promise can't be resolved w/ itself\")\n\t\t\t\t\texecuteOnce(then.bind(value))\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallAsync(function() {\n\t\t\t\t\t\tif (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) list[i](value)\n\t\t\t\t\t\tresolvers.length = 0, rejectors.length = 0\n\t\t\t\t\t\tinstance.state = shouldAbsorb\n\t\t\t\t\t\tinstance.retry = function() {execute(value)}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\trejectCurrent(e)\n\t\t\t}\n\t\t}\n\t}\n\tfunction executeOnce(then) {\n\t\tvar runs = 0\n\t\tfunction run(fn) {\n\t\t\treturn function(value) {\n\t\t\t\tif (runs++ > 0) return\n\t\t\t\tfn(value)\n\t\t\t}\n\t\t}\n\t\tvar onerror = run(rejectCurrent)\n\t\ttry {then(run(resolveCurrent), onerror)} catch (e) {onerror(e)}\n\t}\n\texecuteOnce(executor)\n}\nPromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\n\tvar self = this, instance = self._instance\n\tfunction handle(callback, list, next, state) {\n\t\tlist.push(function(value) {\n\t\t\tif (typeof callback !== \"function\") next(value)\n\t\t\telse try {resolveNext(callback(value))} catch (e) {if (rejectNext) rejectNext(e)}\n\t\t})\n\t\tif (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\n\t}\n\tvar resolveNext, rejectNext\n\tvar promise = new PromisePolyfill(function(resolve, reject) {resolveNext = resolve, rejectNext = reject})\n\thandle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\n\treturn promise\n}\nPromisePolyfill.prototype.catch = function(onRejection) {\n\treturn this.then(null, onRejection)\n}\nPromisePolyfill.resolve = function(value) {\n\tif (value instanceof PromisePolyfill) return value\n\treturn new PromisePolyfill(function(resolve) {resolve(value)})\n}\nPromisePolyfill.reject = function(value) {\n\treturn new PromisePolyfill(function(resolve, reject) {reject(value)})\n}\nPromisePolyfill.all = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tvar total = list.length, count = 0, values = []\n\t\tif (list.length === 0) resolve([])\n\t\telse for (var i = 0; i < list.length; i++) {\n\t\t\t(function(i) {\n\t\t\t\tfunction consume(value) {\n\t\t\t\t\tcount++\n\t\t\t\t\tvalues[i] = value\n\t\t\t\t\tif (count === total) resolve(values)\n\t\t\t\t}\n\t\t\t\tif (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\n\t\t\t\t\tlist[i].then(consume, reject)\n\t\t\t\t}\n\t\t\t\telse consume(list[i])\n\t\t\t})(i)\n\t\t}\n\t})\n}\nPromisePolyfill.race = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlist[i].then(resolve, reject)\n\t\t}\n\t})\n}\nif (typeof window !== \"undefined\") {\n\tif (typeof window.Promise === \"undefined\") window.Promise = PromisePolyfill\n\tvar PromisePolyfill = window.Promise\n} else if (typeof global !== \"undefined\") {\n\tif (typeof global.Promise === \"undefined\") global.Promise = PromisePolyfill\n\tvar PromisePolyfill = global.Promise\n} else {\n}\nvar buildQueryString = function(object) {\n\tif (Object.prototype.toString.call(object) !== \"[object Object]\") return \"\"\n\tvar args = []\n\tfor (var key0 in object) {\n\t\tdestructure(key0, object[key0])\n\t}\n\treturn args.join(\"&\")\n\tfunction destructure(key0, value) {\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\tdestructure(key0 + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse if (Object.prototype.toString.call(value) === \"[object Object]\") {\n\t\t\tfor (var i in value) {\n\t\t\t\tdestructure(key0 + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse args.push(encodeURIComponent(key0) + (value != null && value !== \"\" ? \"=\" + encodeURIComponent(value) : \"\"))\n\t}\n}\nvar FILE_PROTOCOL_REGEX = new RegExp(\"^file://\", \"i\")\nvar _8 = function($window, Promise) {\n\tvar callbackCount = 0\n\tvar oncompletion\n\tfunction setCompletionCallback(callback) {oncompletion = callback}\n\tfunction finalizer() {\n\t\tvar count = 0\n\t\tfunction complete() {if (--count === 0 && typeof oncompletion === \"function\") oncompletion()}\n\t\treturn function finalize(promise0) {\n\t\t\tvar then0 = promise0.then\n\t\t\tpromise0.then = function() {\n\t\t\t\tcount++\n\t\t\t\tvar next = then0.apply(promise0, arguments)\n\t\t\t\tnext.then(complete, function(e) {\n\t\t\t\t\tcomplete()\n\t\t\t\t\tif (count === 0) throw e\n\t\t\t\t})\n\t\t\t\treturn finalize(next)\n\t\t\t}\n\t\t\treturn promise0\n\t\t}\n\t}\n\tfunction normalize(args, extra) {\n\t\tif (typeof args === \"string\") {\n\t\t\tvar url = args\n\t\t\targs = extra || {}\n\t\t\tif (args.url == null) args.url = url\n\t\t}\n\t\treturn args\n\t}\n\tfunction request(args, extra) {\n\t\tvar finalize = finalizer()\n\t\targs = normalize(args, extra)\n\t\tvar promise0 = new Promise(function(resolve, reject) {\n\t\t\tif (args.method == null) args.method = \"GET\"\n\t\t\targs.method = args.method.toUpperCase()\n\t\t\tvar useBody = (args.method === \"GET\" || args.method === \"TRACE\") ? false : (typeof args.useBody === \"boolean\" ? args.useBody : true)\n\t\t\tif (typeof args.serialize !== \"function\") args.serialize = typeof FormData !== \"undefined\" && args.data instanceof FormData ? function(value) {return value} : JSON.stringify\n\t\t\tif (typeof args.deserialize !== \"function\") args.deserialize = deserialize\n\t\t\tif (typeof args.extract !== \"function\") args.extract = extract\n\t\t\targs.url = interpolate(args.url, args.data)\n\t\t\tif (useBody) args.data = args.serialize(args.data)\n\t\t\telse args.url = assemble(args.url, args.data)\n\t\t\tvar xhr = new $window.XMLHttpRequest(),\n\t\t\t\taborted = false,\n\t\t\t\t_abort = xhr.abort\n\t\t\txhr.abort = function abort() {\n\t\t\t\taborted = true\n\t\t\t\t_abort.call(xhr)\n\t\t\t}\n\t\t\txhr.open(args.method, args.url, typeof args.async === \"boolean\" ? args.async : true, typeof args.user === \"string\" ? args.user : undefined, typeof args.password === \"string\" ? args.password : undefined)\n\t\t\tif (args.serialize === JSON.stringify && useBody && !(args.headers && args.headers.hasOwnProperty(\"Content-Type\"))) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t\t}\n\t\t\tif (args.deserialize === deserialize && !(args.headers && args.headers.hasOwnProperty(\"Accept\"))) {\n\t\t\t\txhr.setRequestHeader(\"Accept\", \"application/json, text/*\")\n\t\t\t}\n\t\t\tif (args.withCredentials) xhr.withCredentials = args.withCredentials\n\t\t\tfor (var key in args.headers) if ({}.hasOwnProperty.call(args.headers, key)) {\n\t\t\t\txhr.setRequestHeader(key, args.headers[key])\n\t\t\t}\n\t\t\tif (typeof args.config === \"function\") xhr = args.config(xhr, args) || xhr\n\t\t\txhr.onreadystatechange = function() {\n\t\t\t\t// Don't throw errors on xhr.abort().\n\t\t\t\tif(aborted) return\n\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar response = (args.extract !== extract) ? args.extract(xhr, args) : args.deserialize(args.extract(xhr, args))\n\t\t\t\t\t\tif ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304 || FILE_PROTOCOL_REGEX.test(args.url)) {\n\t\t\t\t\t\t\tresolve(cast(args.type, response))\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar error = new Error(xhr.responseText)\n\t\t\t\t\t\t\tfor (var key in response) error[key] = response[key]\n\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\treject(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (useBody && (args.data != null)) xhr.send(args.data)\n\t\t\telse xhr.send()\n\t\t})\n\t\treturn args.background === true ? promise0 : finalize(promise0)\n\t}\n\tfunction jsonp(args, extra) {\n\t\tvar finalize = finalizer()\n\t\targs = normalize(args, extra)\n\t\tvar promise0 = new Promise(function(resolve, reject) {\n\t\t\tvar callbackName = args.callbackName || \"_mithril_\" + Math.round(Math.random() * 1e16) + \"_\" + callbackCount++\n\t\t\tvar script = $window.document.createElement(\"script\")\n\t\t\t$window[callbackName] = function(data) {\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\tresolve(cast(args.type, data))\n\t\t\t\tdelete $window[callbackName]\n\t\t\t}\n\t\t\tscript.onerror = function() {\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\treject(new Error(\"JSONP request failed\"))\n\t\t\t\tdelete $window[callbackName]\n\t\t\t}\n\t\t\tif (args.data == null) args.data = {}\n\t\t\targs.url = interpolate(args.url, args.data)\n\t\t\targs.data[args.callbackKey || \"callback\"] = callbackName\n\t\t\tscript.src = assemble(args.url, args.data)\n\t\t\t$window.document.documentElement.appendChild(script)\n\t\t})\n\t\treturn args.background === true? promise0 : finalize(promise0)\n\t}\n\tfunction interpolate(url, data) {\n\t\tif (data == null) return url\n\t\tvar tokens = url.match(/:[^\\/]+/gi) || []\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar key = tokens[i].slice(1)\n\t\t\tif (data[key] != null) {\n\t\t\t\turl = url.replace(tokens[i], data[key])\n\t\t\t}\n\t\t}\n\t\treturn url\n\t}\n\tfunction assemble(url, data) {\n\t\tvar querystring = buildQueryString(data)\n\t\tif (querystring !== \"\") {\n\t\t\tvar prefix = url.indexOf(\"?\") < 0 ? \"?\" : \"&\"\n\t\t\turl += prefix + querystring\n\t\t}\n\t\treturn url\n\t}\n\tfunction deserialize(data) {\n\t\ttry {return data !== \"\" ? JSON.parse(data) : null}\n\t\tcatch (e) {throw new Error(data)}\n\t}\n\tfunction extract(xhr) {return xhr.responseText}\n\tfunction cast(type0, data) {\n\t\tif (typeof type0 === \"function\") {\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tdata[i] = new type0(data[i])\n\t\t\t\t}\n\t\t\t}\n\t\t\telse return new type0(data)\n\t\t}\n\t\treturn data\n\t}\n\treturn {request: request, jsonp: jsonp, setCompletionCallback: setCompletionCallback}\n}\nvar requestService = _8(window, PromisePolyfill)\nvar coreRenderer = function($window) {\n\tvar $doc = $window.document\n\tvar $emptyFragment = $doc.createDocumentFragment()\n\tvar nameSpace = {\n\t\tsvg: \"http://www.w3.org/2000/svg\",\n\t\tmath: \"http://www.w3.org/1998/Math/MathML\"\n\t}\n\tvar onevent\n\tfunction setEventCallback(callback) {return onevent = callback}\n\tfunction getNameSpace(vnode) {\n\t\treturn vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag]\n\t}\n\t//create\n\tfunction createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t}\n\tfunction createNode(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tif (typeof tag === \"string\") {\n\t\t\tvnode.state = {}\n\t\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\t\tswitch (tag) {\n\t\t\t\tcase \"#\": return createText(parent, vnode, nextSibling)\n\t\t\t\tcase \"<\": return createHTML(parent, vnode, nextSibling)\n\t\t\t\tcase \"[\": return createFragment(parent, vnode, hooks, ns, nextSibling)\n\t\t\t\tdefault: return createElement(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t\telse return createComponent(parent, vnode, hooks, ns, nextSibling)\n\t}\n\tfunction createText(parent, vnode, nextSibling) {\n\t\tvnode.dom = $doc.createTextNode(vnode.children)\n\t\tinsertNode(parent, vnode.dom, nextSibling)\n\t\treturn vnode.dom\n\t}\n\tfunction createHTML(parent, vnode, nextSibling) {\n\t\tvar match1 = vnode.children.match(/^\\s*?<(\\w+)/im) || []\n\t\tvar parent1 = {caption: \"table\", thead: \"table\", tbody: \"table\", tfoot: \"table\", tr: \"tbody\", th: \"tr\", td: \"tr\", colgroup: \"table\", col: \"colgroup\"}[match1[1]] || \"div\"\n\t\tvar temp = $doc.createElement(parent1)\n\t\ttemp.innerHTML = vnode.children\n\t\tvnode.dom = temp.firstChild\n\t\tvnode.domSize = temp.childNodes.length\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tvar child\n\t\twhile (child = temp.firstChild) {\n\t\t\tfragment.appendChild(child)\n\t\t}\n\t\tinsertNode(parent, fragment, nextSibling)\n\t\treturn fragment\n\t}\n\tfunction createFragment(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tif (vnode.children != null) {\n\t\t\tvar children = vnode.children\n\t\t\tcreateNodes(fragment, children, 0, children.length, hooks, null, ns)\n\t\t}\n\t\tvnode.dom = fragment.firstChild\n\t\tvnode.domSize = fragment.childNodes.length\n\t\tinsertNode(parent, fragment, nextSibling)\n\t\treturn fragment\n\t}\n\tfunction createElement(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tvar attrs2 = vnode.attrs\n\t\tvar is = attrs2 && attrs2.is\n\t\tns = getNameSpace(vnode) || ns\n\t\tvar element = ns ?\n\t\t\tis ? $doc.createElementNS(ns, tag, {is: is}) : $doc.createElementNS(ns, tag) :\n\t\t\tis ? $doc.createElement(tag, {is: is}) : $doc.createElement(tag)\n\t\tvnode.dom = element\n\t\tif (attrs2 != null) {\n\t\t\tsetAttrs(vnode, attrs2, ns)\n\t\t}\n\t\tinsertNode(parent, element, nextSibling)\n\t\tif (vnode.attrs != null && vnode.attrs.contenteditable != null) {\n\t\t\tsetContentEditable(vnode)\n\t\t}\n\t\telse {\n\t\t\tif (vnode.text != null) {\n\t\t\t\tif (vnode.text !== \"\") element.textContent = vnode.text\n\t\t\t\telse vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\t}\n\t\t\tif (vnode.children != null) {\n\t\t\t\tvar children = vnode.children\n\t\t\t\tcreateNodes(element, children, 0, children.length, hooks, null, ns)\n\t\t\t\tsetLateAttrs(vnode)\n\t\t\t}\n\t\t}\n\t\treturn element\n\t}\n\tfunction initComponent(vnode, hooks) {\n\t\tvar sentinel\n\t\tif (typeof vnode.tag.view === \"function\") {\n\t\t\tvnode.state = Object.create(vnode.tag)\n\t\t\tsentinel = vnode.state.view\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return $emptyFragment\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t} else {\n\t\t\tvnode.state = void 0\n\t\t\tsentinel = vnode.tag\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return $emptyFragment\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t\tvnode.state = (vnode.tag.prototype != null && typeof vnode.tag.prototype.view === \"function\") ? new vnode.tag(vnode) : vnode.tag(vnode)\n\t\t}\n\t\tvnode._state = vnode.state\n\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\tinitLifecycle(vnode._state, vnode, hooks)\n\t\tvnode.instance = Vnode.normalize(vnode._state.view.call(vnode.state, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tsentinel.$$reentrantLock$$ = null\n\t}\n\tfunction createComponent(parent, vnode, hooks, ns, nextSibling) {\n\t\tinitComponent(vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tvar element = createNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0\n\t\t\tinsertNode(parent, element, nextSibling)\n\t\t\treturn element\n\t\t}\n\t\telse {\n\t\t\tvnode.domSize = 0\n\t\t\treturn $emptyFragment\n\t\t}\n\t}\n\t//update\n\tfunction updateNodes(parent, old, vnodes, recycling, hooks, nextSibling, ns) {\n\t\tif (old === vnodes || old == null && vnodes == null) return\n\t\telse if (old == null) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns)\n\t\telse if (vnodes == null) removeNodes(old, 0, old.length, vnodes)\n\t\telse {\n\t\t\tif (old.length === vnodes.length) {\n\t\t\t\tvar isUnkeyed = false\n\t\t\t\tfor (var i = 0; i < vnodes.length; i++) {\n\t\t\t\t\tif (vnodes[i] != null && old[i] != null) {\n\t\t\t\t\t\tisUnkeyed = vnodes[i].key == null && old[i].key == null\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isUnkeyed) {\n\t\t\t\t\tfor (var i = 0; i < old.length; i++) {\n\t\t\t\t\t\tif (old[i] === vnodes[i]) continue\n\t\t\t\t\t\telse if (old[i] == null && vnodes[i] != null) createNode(parent, vnodes[i], hooks, ns, getNextSibling(old, i + 1, nextSibling))\n\t\t\t\t\t\telse if (vnodes[i] == null) removeNodes(old, i, i + 1, vnodes)\n\t\t\t\t\t\telse updateNode(parent, old[i], vnodes[i], hooks, getNextSibling(old, i + 1, nextSibling), recycling, ns)\n\t\t\t\t\t}\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\trecycling = recycling || isRecyclable(old, vnodes)\n\t\t\tif (recycling) {\n\t\t\t\tvar pool = old.pool\n\t\t\t\told = old.concat(old.pool)\n\t\t\t}\n\t\t\tvar oldStart = 0, start = 0, oldEnd = old.length - 1, end = vnodes.length - 1, map\n\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\tvar o = old[oldStart], v = vnodes[start]\n\t\t\t\tif (o === v && !recycling) oldStart++, start++\n\t\t\t\telse if (o == null) oldStart++\n\t\t\t\telse if (v == null) start++\n\t\t\t\telse if (o.key === v.key) {\n\t\t\t\t\tvar shouldRecycle = (pool != null && oldStart >= old.length - pool.length) || ((pool == null) && recycling)\n\t\t\t\t\toldStart++, start++\n\t\t\t\t\tupdateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), shouldRecycle, ns)\n\t\t\t\t\tif (recycling && o.tag === v.tag) insertNode(parent, toFragment(o), nextSibling)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar o = old[oldEnd]\n\t\t\t\t\tif (o === v && !recycling) oldEnd--, start++\n\t\t\t\t\telse if (o == null) oldEnd--\n\t\t\t\t\telse if (v == null) start++\n\t\t\t\t\telse if (o.key === v.key) {\n\t\t\t\t\t\tvar shouldRecycle = (pool != null && oldEnd >= old.length - pool.length) || ((pool == null) && recycling)\n\t\t\t\t\t\tupdateNode(parent, o, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), shouldRecycle, ns)\n\t\t\t\t\t\tif (recycling || start < end) insertNode(parent, toFragment(o), getNextSibling(old, oldStart, nextSibling))\n\t\t\t\t\t\toldEnd--, start++\n\t\t\t\t\t}\n\t\t\t\t\telse break\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\tvar o = old[oldEnd], v = vnodes[end]\n\t\t\t\tif (o === v && !recycling) oldEnd--, end--\n\t\t\t\telse if (o == null) oldEnd--\n\t\t\t\telse if (v == null) end--\n\t\t\t\telse if (o.key === v.key) {\n\t\t\t\t\tvar shouldRecycle = (pool != null && oldEnd >= old.length - pool.length) || ((pool == null) && recycling)\n\t\t\t\t\tupdateNode(parent, o, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), shouldRecycle, ns)\n\t\t\t\t\tif (recycling && o.tag === v.tag) insertNode(parent, toFragment(o), nextSibling)\n\t\t\t\t\tif (o.dom != null) nextSibling = o.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!map) map = getKeyMap(old, oldEnd)\n\t\t\t\t\tif (v != null) {\n\t\t\t\t\t\tvar oldIndex = map[v.key]\n\t\t\t\t\t\tif (oldIndex != null) {\n\t\t\t\t\t\t\tvar movable = old[oldIndex]\n\t\t\t\t\t\t\tvar shouldRecycle = (pool != null && oldIndex >= old.length - pool.length) || ((pool == null) && recycling)\n\t\t\t\t\t\t\tupdateNode(parent, movable, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), recycling, ns)\n\t\t\t\t\t\t\tinsertNode(parent, toFragment(movable), nextSibling)\n\t\t\t\t\t\t\told[oldIndex].skip = true\n\t\t\t\t\t\t\tif (movable.dom != null) nextSibling = movable.dom\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar dom = createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\tnextSibling = dom\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tend--\n\t\t\t\t}\n\t\t\t\tif (end < start) break\n\t\t\t}\n\t\t\tcreateNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\tremoveNodes(old, oldStart, oldEnd + 1, vnodes)\n\t\t}\n\t}\n\tfunction updateNode(parent, old, vnode, hooks, nextSibling, recycling, ns) {\n\t\tvar oldTag = old.tag, tag = vnode.tag\n\t\tif (oldTag === tag) {\n\t\t\tvnode.state = old.state\n\t\t\tvnode._state = old._state\n\t\t\tvnode.events = old.events\n\t\t\tif (!recycling && shouldNotUpdate(vnode, old)) return\n\t\t\tif (typeof oldTag === \"string\") {\n\t\t\t\tif (vnode.attrs != null) {\n\t\t\t\t\tif (recycling) {\n\t\t\t\t\t\tvnode.state = {}\n\t\t\t\t\t\tinitLifecycle(vnode.attrs, vnode, hooks)\n\t\t\t\t\t}\n\t\t\t\t\telse updateLifecycle(vnode.attrs, vnode, hooks)\n\t\t\t\t}\n\t\t\t\tswitch (oldTag) {\n\t\t\t\t\tcase \"#\": updateText(old, vnode); break\n\t\t\t\t\tcase \"<\": updateHTML(parent, old, vnode, nextSibling); break\n\t\t\t\t\tcase \"[\": updateFragment(parent, old, vnode, recycling, hooks, nextSibling, ns); break\n\t\t\t\t\tdefault: updateElement(old, vnode, recycling, hooks, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse updateComponent(parent, old, vnode, hooks, nextSibling, recycling, ns)\n\t\t}\n\t\telse {\n\t\t\tremoveNode(old, null)\n\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t}\n\t}\n\tfunction updateText(old, vnode) {\n\t\tif (old.children.toString() !== vnode.children.toString()) {\n\t\t\told.dom.nodeValue = vnode.children\n\t\t}\n\t\tvnode.dom = old.dom\n\t}\n\tfunction updateHTML(parent, old, vnode, nextSibling) {\n\t\tif (old.children !== vnode.children) {\n\t\t\ttoFragment(old)\n\t\t\tcreateHTML(parent, vnode, nextSibling)\n\t\t}\n\t\telse vnode.dom = old.dom, vnode.domSize = old.domSize\n\t}\n\tfunction updateFragment(parent, old, vnode, recycling, hooks, nextSibling, ns) {\n\t\tupdateNodes(parent, old.children, vnode.children, recycling, hooks, nextSibling, ns)\n\t\tvar domSize = 0, children = vnode.children\n\t\tvnode.dom = null\n\t\tif (children != null) {\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar child = children[i]\n\t\t\t\tif (child != null && child.dom != null) {\n\t\t\t\t\tif (vnode.dom == null) vnode.dom = child.dom\n\t\t\t\t\tdomSize += child.domSize || 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (domSize !== 1) vnode.domSize = domSize\n\t\t}\n\t}\n\tfunction updateElement(old, vnode, recycling, hooks, ns) {\n\t\tvar element = vnode.dom = old.dom\n\t\tns = getNameSpace(vnode) || ns\n\t\tif (vnode.tag === \"textarea\") {\n\t\t\tif (vnode.attrs == null) vnode.attrs = {}\n\t\t\tif (vnode.text != null) {\n\t\t\t\tvnode.attrs.value = vnode.text //FIXME handle0 multiple children\n\t\t\t\tvnode.text = undefined\n\t\t\t}\n\t\t}\n\t\tupdateAttrs(vnode, old.attrs, vnode.attrs, ns)\n\t\tif (vnode.attrs != null && vnode.attrs.contenteditable != null) {\n\t\t\tsetContentEditable(vnode)\n\t\t}\n\t\telse if (old.text != null && vnode.text != null && vnode.text !== \"\") {\n\t\t\tif (old.text.toString() !== vnode.text.toString()) old.dom.firstChild.nodeValue = vnode.text\n\t\t}\n\t\telse {\n\t\t\tif (old.text != null) old.children = [Vnode(\"#\", undefined, undefined, old.text, undefined, old.dom.firstChild)]\n\t\t\tif (vnode.text != null) vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\tupdateNodes(element, old.children, vnode.children, recycling, hooks, null, ns)\n\t\t}\n\t}\n\tfunction updateComponent(parent, old, vnode, hooks, nextSibling, recycling, ns) {\n\t\tif (recycling) {\n\t\t\tinitComponent(vnode, hooks)\n\t\t} else {\n\t\t\tvnode.instance = Vnode.normalize(vnode._state.view.call(vnode.state, vnode))\n\t\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\t\tif (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks)\n\t\t\tupdateLifecycle(vnode._state, vnode, hooks)\n\t\t}\n\t\tif (vnode.instance != null) {\n\t\t\tif (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\telse updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, recycling, ns)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.instance.domSize\n\t\t}\n\t\telse if (old.instance != null) {\n\t\t\tremoveNode(old.instance, null)\n\t\t\tvnode.dom = undefined\n\t\t\tvnode.domSize = 0\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t}\n\t}\n\tfunction isRecyclable(old, vnodes) {\n\t\tif (old.pool != null && Math.abs(old.pool.length - vnodes.length) <= Math.abs(old.length - vnodes.length)) {\n\t\t\tvar oldChildrenLength = old[0] && old[0].children && old[0].children.length || 0\n\t\t\tvar poolChildrenLength = old.pool[0] && old.pool[0].children && old.pool[0].children.length || 0\n\t\t\tvar vnodesChildrenLength = vnodes[0] && vnodes[0].children && vnodes[0].children.length || 0\n\t\t\tif (Math.abs(poolChildrenLength - vnodesChildrenLength) <= Math.abs(oldChildrenLength - vnodesChildrenLength)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\tfunction getKeyMap(vnodes, end) {\n\t\tvar map = {}, i = 0\n\t\tfor (var i = 0; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tvar key2 = vnode.key\n\t\t\t\tif (key2 != null) map[key2] = i\n\t\t\t}\n\t\t}\n\t\treturn map\n\t}\n\tfunction toFragment(vnode) {\n\t\tvar count0 = vnode.domSize\n\t\tif (count0 != null || vnode.dom == null) {\n\t\t\tvar fragment = $doc.createDocumentFragment()\n\t\t\tif (count0 > 0) {\n\t\t\t\tvar dom = vnode.dom\n\t\t\t\twhile (--count0) fragment.appendChild(dom.nextSibling)\n\t\t\t\tfragment.insertBefore(dom, fragment.firstChild)\n\t\t\t}\n\t\t\treturn fragment\n\t\t}\n\t\telse return vnode.dom\n\t}\n\tfunction getNextSibling(vnodes, i, nextSibling) {\n\t\tfor (; i < vnodes.length; i++) {\n\t\t\tif (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom\n\t\t}\n\t\treturn nextSibling\n\t}\n\tfunction insertNode(parent, dom, nextSibling) {\n\t\tif (nextSibling && nextSibling.parentNode) parent.insertBefore(dom, nextSibling)\n\t\telse parent.appendChild(dom)\n\t}\n\tfunction setContentEditable(vnode) {\n\t\tvar children = vnode.children\n\t\tif (children != null && children.length === 1 && children[0].tag === \"<\") {\n\t\t\tvar content = children[0].children\n\t\t\tif (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content\n\t\t}\n\t\telse if (vnode.text != null || children != null && children.length !== 0) throw new Error(\"Child node of a contenteditable must be trusted\")\n\t}\n\t//remove\n\tfunction removeNodes(vnodes, start, end, context) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tif (vnode.skip) vnode.skip = false\n\t\t\t\telse removeNode(vnode, context)\n\t\t\t}\n\t\t}\n\t}\n\tfunction removeNode(vnode, context) {\n\t\tvar expected = 1, called = 0\n\t\tif (vnode.attrs && typeof vnode.attrs.onbeforeremove === \"function\") {\n\t\t\tvar result = vnode.attrs.onbeforeremove.call(vnode.state, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\texpected++\n\t\t\t\tresult.then(continuation, continuation)\n\t\t\t}\n\t\t}\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode._state.onbeforeremove === \"function\") {\n\t\t\tvar result = vnode._state.onbeforeremove.call(vnode.state, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\texpected++\n\t\t\t\tresult.then(continuation, continuation)\n\t\t\t}\n\t\t}\n\t\tcontinuation()\n\t\tfunction continuation() {\n\t\t\tif (++called === expected) {\n\t\t\t\tonremove(vnode)\n\t\t\t\tif (vnode.dom) {\n\t\t\t\t\tvar count0 = vnode.domSize || 1\n\t\t\t\t\tif (count0 > 1) {\n\t\t\t\t\t\tvar dom = vnode.dom\n\t\t\t\t\t\twhile (--count0) {\n\t\t\t\t\t\t\tremoveNodeFromDOM(dom.nextSibling)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tremoveNodeFromDOM(vnode.dom)\n\t\t\t\t\tif (context != null && vnode.domSize == null && !hasIntegrationMethods(vnode.attrs) && typeof vnode.tag === \"string\") { //TODO test custom elements\n\t\t\t\t\t\tif (!context.pool) context.pool = [vnode]\n\t\t\t\t\t\telse context.pool.push(vnode)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction removeNodeFromDOM(node) {\n\t\tvar parent = node.parentNode\n\t\tif (parent != null) parent.removeChild(node)\n\t}\n\tfunction onremove(vnode) {\n\t\tif (vnode.attrs && typeof vnode.attrs.onremove === \"function\") vnode.attrs.onremove.call(vnode.state, vnode)\n\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\tif (typeof vnode._state.onremove === \"function\") vnode._state.onremove.call(vnode.state, vnode)\n\t\t\tif (vnode.instance != null) onremove(vnode.instance)\n\t\t} else {\n\t\t\tvar children = vnode.children\n\t\t\tif (Array.isArray(children)) {\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar child = children[i]\n\t\t\t\t\tif (child != null) onremove(child)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//attrs2\n\tfunction setAttrs(vnode, attrs2, ns) {\n\t\tfor (var key2 in attrs2) {\n\t\t\tsetAttr(vnode, key2, null, attrs2[key2], ns)\n\t\t}\n\t}\n\tfunction setAttr(vnode, key2, old, value, ns) {\n\t\tvar element = vnode.dom\n\t\tif (key2 === \"key\" || key2 === \"is\" || (old === value && !isFormAttribute(vnode, key2)) && typeof value !== \"object\" || typeof value === \"undefined\" || isLifecycleMethod(key2)) return\n\t\tvar nsLastIndex = key2.indexOf(\":\")\n\t\tif (nsLastIndex > -1 && key2.substr(0, nsLastIndex) === \"xlink\") {\n\t\t\telement.setAttributeNS(\"http://www.w3.org/1999/xlink\", key2.slice(nsLastIndex + 1), value)\n\t\t}\n\t\telse if (key2[0] === \"o\" && key2[1] === \"n\" && typeof value === \"function\") updateEvent(vnode, key2, value)\n\t\telse if (key2 === \"style\") updateStyle(element, old, value)\n\t\telse if (key2 in element && !isAttribute(key2) && ns === undefined && !isCustomElement(vnode)) {\n\t\t\tif (key2 === \"value\") {\n\t\t\t\tvar normalized0 = \"\" + value // eslint-disable-line no-implicit-coercion\n\t\t\t\t//setting input[value] to same value by typing on focused element moves cursor to end in Chrome\n\t\t\t\tif ((vnode.tag === \"input\" || vnode.tag === \"textarea\") && vnode.dom.value === normalized0 && vnode.dom === $doc.activeElement) return\n\t\t\t\t//setting select[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"select\") {\n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\tif (vnode.dom.selectedIndex === -1 && vnode.dom === $doc.activeElement) return\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (old !== null && vnode.dom.value === normalized0 && vnode.dom === $doc.activeElement) return\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//setting option[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"option\" && old != null && vnode.dom.value === normalized0) return\n\t\t\t}\n\t\t\t// If you assign an input type1 that is not supported by IE 11 with an assignment expression, an error0 will occur.\n\t\t\tif (vnode.tag === \"input\" && key2 === \"type\") {\n\t\t\t\telement.setAttribute(key2, value)\n\t\t\t\treturn\n\t\t\t}\n\t\t\telement[key2] = value\n\t\t}\n\t\telse {\n\t\t\tif (typeof value === \"boolean\") {\n\t\t\t\tif (value) element.setAttribute(key2, \"\")\n\t\t\t\telse element.removeAttribute(key2)\n\t\t\t}\n\t\t\telse element.setAttribute(key2 === \"className\" ? \"class\" : key2, value)\n\t\t}\n\t}\n\tfunction setLateAttrs(vnode) {\n\t\tvar attrs2 = vnode.attrs\n\t\tif (vnode.tag === \"select\" && attrs2 != null) {\n\t\t\tif (\"value\" in attrs2) setAttr(vnode, \"value\", null, attrs2.value, undefined)\n\t\t\tif (\"selectedIndex\" in attrs2) setAttr(vnode, \"selectedIndex\", null, attrs2.selectedIndex, undefined)\n\t\t}\n\t}\n\tfunction updateAttrs(vnode, old, attrs2, ns) {\n\t\tif (attrs2 != null) {\n\t\t\tfor (var key2 in attrs2) {\n\t\t\t\tsetAttr(vnode, key2, old && old[key2], attrs2[key2], ns)\n\t\t\t}\n\t\t}\n\t\tif (old != null) {\n\t\t\tfor (var key2 in old) {\n\t\t\t\tif (attrs2 == null || !(key2 in attrs2)) {\n\t\t\t\t\tif (key2 === \"className\") key2 = \"class\"\n\t\t\t\t\tif (key2[0] === \"o\" && key2[1] === \"n\" && !isLifecycleMethod(key2)) updateEvent(vnode, key2, undefined)\n\t\t\t\t\telse if (key2 !== \"key\") vnode.dom.removeAttribute(key2)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction isFormAttribute(vnode, attr) {\n\t\treturn attr === \"value\" || attr === \"checked\" || attr === \"selectedIndex\" || attr === \"selected\" && vnode.dom === $doc.activeElement\n\t}\n\tfunction isLifecycleMethod(attr) {\n\t\treturn attr === \"oninit\" || attr === \"oncreate\" || attr === \"onupdate\" || attr === \"onremove\" || attr === \"onbeforeremove\" || attr === \"onbeforeupdate\"\n\t}\n\tfunction isAttribute(attr) {\n\t\treturn attr === \"href\" || attr === \"list\" || attr === \"form\" || attr === \"width\" || attr === \"height\"// || attr === \"type\"\n\t}\n\tfunction isCustomElement(vnode){\n\t\treturn vnode.attrs.is || vnode.tag.indexOf(\"-\") > -1\n\t}\n\tfunction hasIntegrationMethods(source) {\n\t\treturn source != null && (source.oncreate || source.onupdate || source.onbeforeremove || source.onremove)\n\t}\n\t//style\n\tfunction updateStyle(element, old, style) {\n\t\tif (old === style) element.style.cssText = \"\", old = null\n\t\tif (style == null) element.style.cssText = \"\"\n\t\telse if (typeof style === \"string\") element.style.cssText = style\n\t\telse {\n\t\t\tif (typeof old === \"string\") element.style.cssText = \"\"\n\t\t\tfor (var key2 in style) {\n\t\t\t\telement.style[key2] = style[key2]\n\t\t\t}\n\t\t\tif (old != null && typeof old !== \"string\") {\n\t\t\t\tfor (var key2 in old) {\n\t\t\t\t\tif (!(key2 in style)) element.style[key2] = \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//event\n\tfunction updateEvent(vnode, key2, value) {\n\t\tvar element = vnode.dom\n\t\tvar callback = typeof onevent !== \"function\" ? value : function(e) {\n\t\t\tvar result = value.call(element, e)\n\t\t\tonevent.call(element, e)\n\t\t\treturn result\n\t\t}\n\t\tif (key2 in element) element[key2] = typeof value === \"function\" ? callback : null\n\t\telse {\n\t\t\tvar eventName = key2.slice(2)\n\t\t\tif (vnode.events === undefined) vnode.events = {}\n\t\t\tif (vnode.events[key2] === callback) return\n\t\t\tif (vnode.events[key2] != null) element.removeEventListener(eventName, vnode.events[key2], false)\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tvnode.events[key2] = callback\n\t\t\t\telement.addEventListener(eventName, vnode.events[key2], false)\n\t\t\t}\n\t\t}\n\t}\n\t//lifecycle\n\tfunction initLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.oninit === \"function\") source.oninit.call(vnode.state, vnode)\n\t\tif (typeof source.oncreate === \"function\") hooks.push(source.oncreate.bind(vnode.state, vnode))\n\t}\n\tfunction updateLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.onupdate === \"function\") hooks.push(source.onupdate.bind(vnode.state, vnode))\n\t}\n\tfunction shouldNotUpdate(vnode, old) {\n\t\tvar forceVnodeUpdate, forceComponentUpdate\n\t\tif (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === \"function\") forceVnodeUpdate = vnode.attrs.onbeforeupdate.call(vnode.state, vnode, old)\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode._state.onbeforeupdate === \"function\") forceComponentUpdate = vnode._state.onbeforeupdate.call(vnode.state, vnode, old)\n\t\tif (!(forceVnodeUpdate === undefined && forceComponentUpdate === undefined) && !forceVnodeUpdate && !forceComponentUpdate) {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t\tvnode.instance = old.instance\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\tfunction render(dom, vnodes) {\n\t\tif (!dom) throw new Error(\"Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.\")\n\t\tvar hooks = []\n\t\tvar active = $doc.activeElement\n\t\tvar namespace = dom.namespaceURI\n\t\t// First time0 rendering into a node clears it out\n\t\tif (dom.vnodes == null) dom.textContent = \"\"\n\t\tif (!Array.isArray(vnodes)) vnodes = [vnodes]\n\t\tupdateNodes(dom, dom.vnodes, Vnode.normalizeChildren(vnodes), false, hooks, null, namespace === \"http://www.w3.org/1999/xhtml\" ? undefined : namespace)\n\t\tdom.vnodes = vnodes\n\t\t// document.activeElement can return null in IE https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n\t\tif (active != null && $doc.activeElement !== active) active.focus()\n\t\tfor (var i = 0; i < hooks.length; i++) hooks[i]()\n\t}\n\treturn {render: render, setEventCallback: setEventCallback}\n}\nfunction throttle(callback) {\n\t//60fps translates to 16.6ms, round it down since setTimeout requires int\n\tvar time = 16\n\tvar last = 0, pending = null\n\tvar timeout = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : setTimeout\n\treturn function() {\n\t\tvar now = Date.now()\n\t\tif (last === 0 || now - last >= time) {\n\t\t\tlast = now\n\t\t\tcallback()\n\t\t}\n\t\telse if (pending === null) {\n\t\t\tpending = timeout(function() {\n\t\t\t\tpending = null\n\t\t\t\tcallback()\n\t\t\t\tlast = Date.now()\n\t\t\t}, time - (now - last))\n\t\t}\n\t}\n}\nvar _11 = function($window) {\n\tvar renderService = coreRenderer($window)\n\trenderService.setEventCallback(function(e) {\n\t\tif (e.redraw === false) e.redraw = undefined\n\t\telse redraw()\n\t})\n\tvar callbacks = []\n\tfunction subscribe(key1, callback) {\n\t\tunsubscribe(key1)\n\t\tcallbacks.push(key1, throttle(callback))\n\t}\n\tfunction unsubscribe(key1) {\n\t\tvar index = callbacks.indexOf(key1)\n\t\tif (index > -1) callbacks.splice(index, 2)\n\t}\n\tfunction redraw() {\n\t\tfor (var i = 1; i < callbacks.length; i += 2) {\n\t\t\tcallbacks[i]()\n\t\t}\n\t}\n\treturn {subscribe: subscribe, unsubscribe: unsubscribe, redraw: redraw, render: renderService.render}\n}\nvar redrawService = _11(window)\nrequestService.setCompletionCallback(redrawService.redraw)\nvar _16 = function(redrawService0) {\n\treturn function(root, component) {\n\t\tif (component === null) {\n\t\t\tredrawService0.render(root, [])\n\t\t\tredrawService0.unsubscribe(root)\n\t\t\treturn\n\t\t}\n\t\t\n\t\tif (component.view == null && typeof component !== \"function\") throw new Error(\"m.mount(element, component) expects a component, not a vnode\")\n\t\t\n\t\tvar run0 = function() {\n\t\t\tredrawService0.render(root, Vnode(component))\n\t\t}\n\t\tredrawService0.subscribe(root, run0)\n\t\tredrawService0.redraw()\n\t}\n}\nm.mount = _16(redrawService)\nvar Promise = PromisePolyfill\nvar parseQueryString = function(string) {\n\tif (string === \"\" || string == null) return {}\n\tif (string.charAt(0) === \"?\") string = string.slice(1)\n\tvar entries = string.split(\"&\"), data0 = {}, counters = {}\n\tfor (var i = 0; i < entries.length; i++) {\n\t\tvar entry = entries[i].split(\"=\")\n\t\tvar key5 = decodeURIComponent(entry[0])\n\t\tvar value = entry.length === 2 ? decodeURIComponent(entry[1]) : \"\"\n\t\tif (value === \"true\") value = true\n\t\telse if (value === \"false\") value = false\n\t\tvar levels = key5.split(/\\]\\[?|\\[/)\n\t\tvar cursor = data0\n\t\tif (key5.indexOf(\"[\") > -1) levels.pop()\n\t\tfor (var j = 0; j < levels.length; j++) {\n\t\t\tvar level = levels[j], nextLevel = levels[j + 1]\n\t\t\tvar isNumber = nextLevel == \"\" || !isNaN(parseInt(nextLevel, 10))\n\t\t\tvar isValue = j === levels.length - 1\n\t\t\tif (level === \"\") {\n\t\t\t\tvar key5 = levels.slice(0, j).join()\n\t\t\t\tif (counters[key5] == null) counters[key5] = 0\n\t\t\t\tlevel = counters[key5]++\n\t\t\t}\n\t\t\tif (cursor[level] == null) {\n\t\t\t\tcursor[level] = isValue ? value : isNumber ? [] : {}\n\t\t\t}\n\t\t\tcursor = cursor[level]\n\t\t}\n\t}\n\treturn data0\n}\nvar coreRouter = function($window) {\n\tvar supportsPushState = typeof $window.history.pushState === \"function\"\n\tvar callAsync0 = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\tfunction normalize1(fragment0) {\n\t\tvar data = $window.location[fragment0].replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponent)\n\t\tif (fragment0 === \"pathname\" && data[0] !== \"/\") data = \"/\" + data\n\t\treturn data\n\t}\n\tvar asyncId\n\tfunction debounceAsync(callback0) {\n\t\treturn function() {\n\t\t\tif (asyncId != null) return\n\t\t\tasyncId = callAsync0(function() {\n\t\t\t\tasyncId = null\n\t\t\t\tcallback0()\n\t\t\t})\n\t\t}\n\t}\n\tfunction parsePath(path, queryData, hashData) {\n\t\tvar queryIndex = path.indexOf(\"?\")\n\t\tvar hashIndex = path.indexOf(\"#\")\n\t\tvar pathEnd = queryIndex > -1 ? queryIndex : hashIndex > -1 ? hashIndex : path.length\n\t\tif (queryIndex > -1) {\n\t\t\tvar queryEnd = hashIndex > -1 ? hashIndex : path.length\n\t\t\tvar queryParams = parseQueryString(path.slice(queryIndex + 1, queryEnd))\n\t\t\tfor (var key4 in queryParams) queryData[key4] = queryParams[key4]\n\t\t}\n\t\tif (hashIndex > -1) {\n\t\t\tvar hashParams = parseQueryString(path.slice(hashIndex + 1))\n\t\t\tfor (var key4 in hashParams) hashData[key4] = hashParams[key4]\n\t\t}\n\t\treturn path.slice(0, pathEnd)\n\t}\n\tvar router = {prefix: \"#!\"}\n\trouter.getPath = function() {\n\t\tvar type2 = router.prefix.charAt(0)\n\t\tswitch (type2) {\n\t\t\tcase \"#\": return normalize1(\"hash\").slice(router.prefix.length)\n\t\t\tcase \"?\": return normalize1(\"search\").slice(router.prefix.length) + normalize1(\"hash\")\n\t\t\tdefault: return normalize1(\"pathname\").slice(router.prefix.length) + normalize1(\"search\") + normalize1(\"hash\")\n\t\t}\n\t}\n\trouter.setPath = function(path, data, options) {\n\t\tvar queryData = {}, hashData = {}\n\t\tpath = parsePath(path, queryData, hashData)\n\t\tif (data != null) {\n\t\t\tfor (var key4 in data) queryData[key4] = data[key4]\n\t\t\tpath = path.replace(/:([^\\/]+)/g, function(match2, token) {\n\t\t\t\tdelete queryData[token]\n\t\t\t\treturn data[token]\n\t\t\t})\n\t\t}\n\t\tvar query = buildQueryString(queryData)\n\t\tif (query) path += \"?\" + query\n\t\tvar hash = buildQueryString(hashData)\n\t\tif (hash) path += \"#\" + hash\n\t\tif (supportsPushState) {\n\t\t\tvar state = options ? options.state : null\n\t\t\tvar title = options ? options.title : null\n\t\t\t$window.onpopstate()\n\t\t\tif (options && options.replace) $window.history.replaceState(state, title, router.prefix + path)\n\t\t\telse $window.history.pushState(state, title, router.prefix + path)\n\t\t}\n\t\telse $window.location.href = router.prefix + path\n\t}\n\trouter.defineRoutes = function(routes, resolve, reject) {\n\t\tfunction resolveRoute() {\n\t\t\tvar path = router.getPath()\n\t\t\tvar params = {}\n\t\t\tvar pathname = parsePath(path, params, params)\n\t\t\tvar state = $window.history.state\n\t\t\tif (state != null) {\n\t\t\t\tfor (var k in state) params[k] = state[k]\n\t\t\t}\n\t\t\tfor (var route0 in routes) {\n\t\t\t\tvar matcher = new RegExp(\"^\" + route0.replace(/:[^\\/]+?\\.{3}/g, \"(.*?)\").replace(/:[^\\/]+/g, \"([^\\\\/]+)\") + \"\\/?$\")\n\t\t\t\tif (matcher.test(pathname)) {\n\t\t\t\t\tpathname.replace(matcher, function() {\n\t\t\t\t\t\tvar keys = route0.match(/:[^\\/]+/g) || []\n\t\t\t\t\t\tvar values = [].slice.call(arguments, 1, -2)\n\t\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\tparams[keys[i].replace(/:|\\./g, \"\")] = decodeURIComponent(values[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(routes[route0], params, path, route0)\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\treject(path, params)\n\t\t}\n\t\tif (supportsPushState) $window.onpopstate = debounceAsync(resolveRoute)\n\t\telse if (router.prefix.charAt(0) === \"#\") $window.onhashchange = resolveRoute\n\t\tresolveRoute()\n\t}\n\treturn router\n}\nvar _20 = function($window, redrawService0) {\n\tvar routeService = coreRouter($window)\n\tvar identity = function(v) {return v}\n\tvar render1, component, attrs3, currentPath, lastUpdate\n\tvar route = function(root, defaultRoute, routes) {\n\t\tif (root == null) throw new Error(\"Ensure the DOM element that was passed to `m.route` is not undefined\")\n\t\tvar run1 = function() {\n\t\t\tif (render1 != null) redrawService0.render(root, render1(Vnode(component, attrs3.key, attrs3)))\n\t\t}\n\t\tvar bail = function(path) {\n\t\t\tif (path !== defaultRoute) routeService.setPath(defaultRoute, null, {replace: true})\n\t\t\telse throw new Error(\"Could not resolve default route \" + defaultRoute)\n\t\t}\n\t\trouteService.defineRoutes(routes, function(payload, params, path) {\n\t\t\tvar update = lastUpdate = function(routeResolver, comp) {\n\t\t\t\tif (update !== lastUpdate) return\n\t\t\t\tcomponent = comp != null && (typeof comp.view === \"function\" || typeof comp === \"function\")? comp : \"div\"\n\t\t\t\tattrs3 = params, currentPath = path, lastUpdate = null\n\t\t\t\trender1 = (routeResolver.render || identity).bind(routeResolver)\n\t\t\t\trun1()\n\t\t\t}\n\t\t\tif (payload.view || typeof payload === \"function\") update({}, payload)\n\t\t\telse {\n\t\t\t\tif (payload.onmatch) {\n\t\t\t\t\tPromise.resolve(payload.onmatch(params, path)).then(function(resolved) {\n\t\t\t\t\t\tupdate(payload, resolved)\n\t\t\t\t\t}, bail)\n\t\t\t\t}\n\t\t\t\telse update(payload, \"div\")\n\t\t\t}\n\t\t}, bail)\n\t\tredrawService0.subscribe(root, run1)\n\t}\n\troute.set = function(path, data, options) {\n\t\tif (lastUpdate != null) {\n\t\t\toptions = options || {}\n\t\t\toptions.replace = true\n\t\t}\n\t\tlastUpdate = null\n\t\trouteService.setPath(path, data, options)\n\t}\n\troute.get = function() {return currentPath}\n\troute.prefix = function(prefix0) {routeService.prefix = prefix0}\n\troute.link = function(vnode1) {\n\t\tvnode1.dom.setAttribute(\"href\", routeService.prefix + vnode1.attrs.href)\n\t\tvnode1.dom.onclick = function(e) {\n\t\t\tif (e.ctrlKey || e.metaKey || e.shiftKey || e.which === 2) return\n\t\t\te.preventDefault()\n\t\t\te.redraw = false\n\t\t\tvar href = this.getAttribute(\"href\")\n\t\t\tif (href.indexOf(routeService.prefix) === 0) href = href.slice(routeService.prefix.length)\n\t\t\troute.set(href, undefined, undefined)\n\t\t}\n\t}\n\troute.param = function(key3) {\n\t\tif(typeof attrs3 !== \"undefined\" && typeof key3 !== \"undefined\") return attrs3[key3]\n\t\treturn attrs3\n\t}\n\treturn route\n}\nm.route = _20(window, redrawService)\nm.withAttr = function(attrName, callback1, context) {\n\treturn function(e) {\n\t\tcallback1.call(context || this, attrName in e.currentTarget ? e.currentTarget[attrName] : e.currentTarget.getAttribute(attrName))\n\t}\n}\nvar _28 = coreRenderer(window)\nm.render = _28.render\nm.redraw = redrawService.redraw\nm.request = requestService.request\nm.jsonp = requestService.jsonp\nm.parseQueryString = parseQueryString\nm.buildQueryString = buildQueryString\nm.version = \"1.1.6\"\nm.vnode = Vnode\nif (typeof module !== \"undefined\") module[\"exports\"] = m\nelse window.m = m\n}());","import Tood from './tood'\n\nlet url = 'ws://' + window.location.host + '/websocket'\nlet element = document.getElementById('application')\n\ndocument.Application = new Tood(url, element)\n","class Event {\n  constructor (name) {\n    this.callbacks = new Set()\n  }\n\n  dispatch (_state) {\n    // TODO context\n    this.callbacks.forEach((callback) => callback.apply(callback, arguments))\n    return true\n  }\n\n  registerCallback (callback) {\n    this.callbacks.add(callback)\n    return this.callbacks\n  }\n\n  unregisterCallback (callback) {\n    this.callbacks.delete(callback)\n    return this.callbacks\n  }\n\n  hasCallback (callback) {\n    return this.callbacks.has(callback)\n  }\n\n  get lastCallback () {\n    return this.callbacks.size === 1\n  }\n}\n\nexport default Event\n","import m from 'mithril'\n\nimport Index from './tood/index'\nimport User from './tood/user'\n\nclass Tood {\n  constructor (url, element = document.body) {\n    this.element = element\n    this.setupRouting()\n  }\n\n  setupRouting () {\n    m.route.mode = 'hash'\n    m.route(this.element, '/', {\n      '/': Index,\n      '/users/:userId': User\n    })\n  }\n}\n\nexport default Tood\n","import m from 'mithril'\n\nclass User {\n  constructor () {\n    this.name = ''\n    this.password = ''\n\n    this.setName = (name) => { this.name = name }\n    this.setPassword = (password) => { this.password = password }\n  }\n}\n\nclass UserForm {\n  constructor (vnode) {\n    this.title = ''\n    this.user = new User()\n    this.successful = false\n    this.successfulMsg = ''\n    this.error = false\n    this.errorMsg = ''\n    this.submitBtn = 'OK'\n\n    if ('callback' in vnode.attrs) {\n      this.callback = () => {\n        vnode.attrs.callback()\n      }\n    }\n  }\n\n  view (vnode) {\n    return m('div.login-body.float-left.sticky', {}, [\n      m('div.form', [\n        m('h2', this.title),\n\n        // Username input\n        m('div.row', [\n          m('label', 'Username'),\n          m('input', {\n            type: 'text',\n            value: this.user.name,\n            onchange: m.withAttr('value', this.user.setName)\n            //class: ctrl.bad_user() ? 'error' : ''\n          })\n        ]),\n\n        // Password input\n        m('div.row', [\n          m('label', 'Password'),\n          m('input', {\n            type: 'password',\n            value: this.user.password,\n            onchange: m.withAttr('value', this.user.setPassword)\n            //class: ctrl.bad_password() ? 'error' : ''\n          })\n        ]),\n\n        // Successful and error message\n        m('div.row.msg-box', {class: this.successful ? 'successful' : this.error ? 'error' : ''}, [\n          m('div.successful-msg', this.successfulMsg),\n          m('div.error-msg', this.errorMsg)\n        ]),\n\n        // Sign up button\n        m('div.row', [\n          m('button.submit', {onclick: this.callback}, this.submitBtn)\n        ])\n      ])\n    ])\n  }\n}\n\nclass LogInForm extends UserForm {\n  constructor (vnode) {\n    super(vnode)\n    this.title = 'Log in'\n    this.submitBtn = 'Log in'\n    this.successfulMsg = () => 'Successfully logged in'\n    this.errorMsg = ''\n    this.errorHandler = (reason) => {\n      let msg = ''\n      switch (reason) {\n        case 'not_registered':\n          msg = 'Unregistered user'\n          break;\n        case 'bad_password':\n          msg = 'Bad password'\n          break;\n      }\n      return msg\n    }\n    this.toUserPage = (result) => m.route.set('/users/' + result['user-id'], {token: result.token, username: result.username})\n    this.callback = (e) => {\n      m.request(PostConfig({\n        url : '/log-in',\n        data : {\n          username : this.user.name,\n          password : this.user.password\n        }\n      })).then(genResultHandler(this, this.errorHandler, this.toUserPage))\n    }\n  }\n}\n\nvar PostConfig = function (config) {\n  var defaultConfig = {\n    method: 'POST',\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }\n\n  return Object.assign(defaultConfig, config)\n}\n\nvar genResultHandler = function (_this, error, successful = ((result) => result)) {\n  return (result) => {\n    if (result.state == 'approved') {\n      _this.successful = true\n      _this.error = false\n      successful(result)\n    } else if (result.state == 'refused') {\n      _this.successful = false\n      _this.error = true\n      _this.errorMsg = error(result.reason)\n    }\n  }\n}\n\nclass SignUpForm extends UserForm {\n  constructor (vnode) {\n    super(vnode)\n    this.title = 'Get a new account'\n    this.submitBtn = 'Sign up'\n    this.successfulMsg = 'Successfully registered'\n    this.errorHandler = (reason) =>{\n      let msg = ''\n      switch (reason) {\n        case 'already_registered' :\n          msg = 'Already registered username'\n          break;\n      }\n      return msg\n    }\n    this.callback = () => {\n      m.request(PostConfig({\n        url : '/sign-up',\n        data : {\n          username : this.user.name,\n          password : this.user.password\n        }\n      })).then(genResultHandler(this, this.errorHandler))\n    }\n  }\n}\n\nclass Index {\n  view () {\n    return m('div.login.full.table', [\n      m('div.table-cell.vertical-mid', [\n        m('div.login-container.centered.centered-container', [\n          m('div.login-header', 'Tood'),\n\n          m(LogInForm),\n          m(SignUpForm)\n        ])\n      ])\n    ])\n  }\n}\n\nexport default Index\n","import m from 'mithril'\nimport { uuid } from '../utils'\n\nclass Sticky {\n  constructor (vnode) {\n    this.item = vnode.attrs.item\n  }\n\n  view (vnode) {\n    return m('div.item.sticky', {}, [\n      // Text of item\n      m('div.row', [\n        m('input', {\n          type: 'text',\n          value: this.item.summary,\n          disabled: true\n        })\n      ])\n    ])\n  }\n}\n\nclass Item {\n  constructor (todo) {\n    var _this = {\n      summary: '',\n    }\n    Object.assign(this, _this)\n\n    this.defaults = (username) => {\n      this.id = username\n      this.created_at = new Date().getTime();\n      this.due = this.created_at + 10000000 // TODO\n      this.sequence = 1\n      this.status = \"in_process\"\n      this.x = { \"TOOD-ID\": uuid() }\n    }\n\n    this.setSummary = (summary) => this.summary = summary\n  }\n}\n\nclass ItemSticky {\n  constructor (vnode) {\n    this.todo = vnode.attrs.todo\n    this.update = () => vnode.attrs.update(this.todo)\n    this.ready = () => {\n      this.todo.status = 'completed'\n      vnode.attrs.update(this.todo)\n    }\n\n    this.close = vnode.attrs.close\n\n    this.setSummary = (function (that) {\n      return (summary) => {\n        that.todo.summary = summary\n      }\n    })(this)\n  }\n\n  view (vnode) {\n    return m('div.item.sticky', {}, [\n      // Closing small 'x' character\n      m('div.row.right.x', m('span', { onclick:  this.close }, 'x')),\n\n      // Text of item\n      m('div.row', [\n        m('input', {\n          type: 'text',\n          value: this.todo.summary,\n          onchange: m.withAttr('value', this.setSummary)\n        })\n      ]),\n\n      m('div.row', [\n        // Submit button\n        m('button', { type: 'submit', onclick: this.update }, 'Update'),\n        // Ready button\n        m('button', { type: 'submit', onclick: this.ready  }, 'Ready!')\n      ]),\n    ])\n  }\n}\n\nclass ItemCreatorSticky {\n  constructor (vnode) {\n    this.item = new Item()\n    this.createItem = () => {\n      this.item.defaults(vnode.attrs.username)\n      vnode.attrs.createItem(this.item)\n      this.item = new Item()\n    }\n  }\n\n  view (vnode) {\n    return m('div.item.sticky', {}, [\n      m('div.row', [\n        // Text of item\n        m('input', {\n          type: 'text',\n          value: this.item.summary,\n          onchange: m.withAttr('value', this.item.setSummary)\n        }),\n\n        // Submit button\n        m('button', {type: 'submit', onclick: this.createItem}, 'Create')\n      ])\n    ])\n  }\n}\n\nexport { ItemSticky, ItemCreatorSticky, Sticky }\n","import m from 'mithril'\nimport { ItemSticky, ItemCreatorSticky, Sticky } from './item'\n\nimport WebSocketHandler from '../webSocketHandler'\n\nclass User {\n  constructor (vnode) {\n    this.userId = vnode.attrs.userId\n    this.username = vnode.attrs.username\n    this.ws = new WebSocketHandler(\"ws://\" + window.location.host + \"/websocket/\" + vnode.attrs.token)\n\n    this.ws.sendForResponse({type: \"get-items\"})\n      .then((res) => this.items = res.items)\n      .then((_) => m.redraw())\n\n    this.logout = () => {\n      this.ws.close()\n      m.route.set(\"/\")\n    }\n\n    // TODO\n    this.refresh = (e) => { console.log(this); m.redraw() }\n  }\n\n  oninit (vnode) {\n    this.items = []\n  }\n\n  view (vnode) {\n    var creatorAttrs = (function (that) {\n      return {\n        username: that.username,\n        userId: that.userId,\n        createItem: (item) => {\n          that.ws.send({\n            type: \"create-item\",\n            item: item\n          })\n          that.items = that.items.concat(item)\n        }\n      }\n    })(this)\n\n    var itemAttrs = (function (that) {\n      return function (item) {\n        return {\n          todo: item,\n          update: (item) => {\n            that.ws.send({\n              type: 'update-item',\n              item: item\n            })\n          },\n          close: () => {\n            that.ws.send({\n              type: \"delete-item\",\n              item: item\n            })\n            that.items = that.items.filter((i) => i !== item)\n          }\n        }\n      }\n    })(this)\n\n    return [\n      m('div.full.table', [\n        m('navbar.navbar', [\n          m('button', {onclick: this.logout}, 'Log Out'),\n          m('button', {onclick: this.refresh}, 'Refresh'),\n          m('span.username', 'Username: ' + this.username),\n          m('a', {href: '/todos/' + this.userId, download: this.username + '.ics'}, 'Download .ics')\n        ]),\n        m('div.user-container', [\n          m('div.items-group', [\n            m('h2', 'Tickets'),\n\n            m('div', {class: 'row'}, [\n              m('h3', 'New ticket'),\n              m(ItemCreatorSticky, creatorAttrs)\n            ]),\n\n            m('div', {class: 'row'}, [\n              m('h3', 'Active tickets'),\n              m('div.items', this.items.filter((i) => i.status !== \"completed\").sort((i) => -i.due).map((item) => m(ItemSticky, itemAttrs(item))))\n            ]),\n\n            m('div', {class: 'row'}, [\n              m('h3', 'Completed tickets'),\n              m('div.items', this.items.filter((i) => i.status == \"completed\").sort((i) => i.due).map((item) => m(Sticky, { item: item })))\n            ]),\n          ])\n        ])\n      ])\n    ]\n  }\n}\n\nexport default User\n","var uuidv4 = function () {\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  )\n}\n\nexport { uuidv4 as uuid }\n","import Event from './event'\n\nvar _sendQueue = []\n\nclass WebSocketHandler {\n  constructor (hostname) {\n    this.hostname = hostname\n    this.ready = false\n    this.events = new Map()\n    this.ws = new WebSocket(hostname)\n    this.ws.addEventListener('open', (event) => this.onOpen(event))\n  }\n\n  close () { this.ws.close() }\n\n  onOpen () {\n    this.ws.addEventListener('message', (event) => this.onMessage(event))\n    this.ready = true\n    this.sendQueue()\n  }\n\n  sendQueue () {\n    _sendQueue.forEach((data) => this.ws.send(data))\n  }\n\n  send (data) {\n    let serializedData = JSON.stringify(data)\n    if (this.ready) {\n      this.ws.send(serializedData)\n    } else {\n      _sendQueue.push(serializedData)\n    }\n  }\n\n  // necessary because of es6 & old school scoping\n  sendForResponse (data) {\n    let promise = function (resolve, reject) {\n      let _handler = function (event) {\n        this.removeEventListener(data.type, handler)\n        resolve(event)\n      }\n      let handler = (event) => _handler.apply(this, [event])\n      this.addEventListener(data.type, handler)\n      this.send(data)\n    }\n\n    return new Promise((resolve, reject) => promise.apply(this, [resolve, reject]))\n  }\n\n  registerEvent (eventType) {\n    this.events.set(eventType, new Event(eventType))\n  }\n\n  addEventListener (eventType, callback) {\n    if (!this.events.has(eventType)) { this.registerEvent(eventType) }\n    this.events.get(eventType).registerCallback(callback)\n  }\n\n  removeEventListener (eventType, callback) {\n    if (this.events.has(eventType)) {\n      let exists = this.events.get(eventType).hasCallback(callback)\n      if (!exists) {\n        console.error('Try to remove an unregistered callback function')\n      } else {\n        if (this.events.get(eventType).lastCallback) {\n          this.events.delete(eventType)\n        } else {\n          this.events.get(eventType).unregisterCallback(callback)\n        }\n      }\n    }\n  }\n\n  onMessage (event) {\n    let data = JSON.parse(event.data)\n    this.dispatchEvent(data.type, data)\n  }\n\n  dispatchEvent (eventType, state) {\n    if (eventType === 'unhandled') {\n      console.error('Try to send an unhandled action')\n    } else if (this.events.has(eventType)) {\n      this.events.get(eventType).dispatch(state)\n    } else { console.warn(`${eventType} is not registered.`) }\n  }\n}\n\nexport default WebSocketHandler\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}